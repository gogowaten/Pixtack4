<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Pixtack4">




  <Style TargetType="{x:Type local:AreaThumb}">
    <Setter Property="Canvas.Left" Value="0"/>
    <Setter Property="Canvas.Top" Value="0"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AreaThumb}">
          <Rectangle Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:HandleThumb}">
    <Setter Property="Canvas.Left"
            Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyLeft, Mode=TwoWay}"/>
    <Setter Property="Canvas.Top"
            Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyTop, Mode=TwoWay}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:HandleThumb}">
          <Grid>
            <Rectangle
              Stroke="White"
              StrokeThickness="1.0"/>
            <Rectangle
              Stroke="Black"
              StrokeThickness="1.0"
              StrokeDashArray="2"
              Fill="Transparent"
              />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



  <Style TargetType="local:AnchorHandleThumb">
    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MySize}"/>
    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MySize}"/>
    <Setter Property="Canvas.Left" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyLeft}"/>
    <Setter Property="Canvas.Top" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyTop}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AnchorHandleThumb}">
          <Grid Background="Transparent">
            <Rectangle Width="4" Height="4" Fill="White"/>
            <Rectangle Width="2" Height="2" Fill="Blue"/>
            <Ellipse Stroke="White"/>
            <Ellipse x:Name="rect"
                     Stroke="Blue"
                     StrokeThickness="1.0"
                     StrokeDashArray="3"
                     />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>




  <Style x:Key="waku4" TargetType="Border">
    <Style.Resources>
      <local:MyWakuBrushConverter x:Key="wakuConvert2"/>
    </Style.Resources>
    <Setter Property="Visibility" Value="{Binding IsWakuVisible, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
    <Setter Property="BorderThickness" Value="1.0"/>
    <Setter Property="BorderBrush">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource wakuConvert2}">
          <Binding Path="MyBrushList" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
          <Binding Path="IsFocus" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
          <Binding Path="IsSelected" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
          <Binding Path="IsSelectable" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
          <Binding Path="IsActiveGroup" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="kiso" TargetType="{x:Type local:KisoThumb}">
    <Setter Property="MyThumbType" Value="{Binding
      RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay, Path=MyItemData.MyThumbType}"/>
    <Setter Property="Canvas.Left" Value="{Binding
      RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay, Path=MyItemData.MyLeft}"/>
    <Setter Property="Canvas.Top" Value="{Binding
      RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay, Path=MyItemData.MyTop}"/>
    <Setter Property="Panel.ZIndex" Value="{Binding Mode=TwoWay,
      RelativeSource={RelativeSource Mode=Self}, Path=MyItemData.MyZIndex}"/>
    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyInsideElementBounds.Width}"/>
    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyInsideElementBounds.Height}"/>

  </Style>



  <Style TargetType="{x:Type local:ImageThumb}" BasedOn="{StaticResource kiso}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ImageThumb}">
          <Grid DataContext="{Binding
              RelativeSource={RelativeSource Mode=TemplatedParent},
              Path=MyItemData}">
            <Canvas>
              <Image x:Name="element"
                     Source="{Binding MyBitmapSource}"
                     Canvas.Left="{Binding
                      RelativeSource={RelativeSource Mode=TemplatedParent},
                      Path=MyInsideElementOffsetLeft}"
                     Canvas.Top="{Binding
                      RelativeSource={RelativeSource Mode=TemplatedParent},
                      Path=MyInsideElementOffsetTop}"
                     >
                <Image.RenderTransform>
                  <RotateTransform x:Name="rotate" Angle="{Binding MyAngle}"/>
                </Image.RenderTransform>
              </Image>
            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="{x:Type local:EllipseThumb}" BasedOn="{StaticResource kiso}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:EllipseThumb}">
          <Grid DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData}">
            <Canvas>
              <Ellipse
                x:Name="element"
                Canvas.Left="{
                  Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetLeft}"
                Canvas.Top="{
                  Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetTop}"
                Width="{Binding MyWidth}"
                Height="{Binding MyHeight}"
                Fill="{Binding ShapeItemData.MyFill}"
                Stroke="{Binding ShapeItemData.WakuColor}"
                StrokeThickness="{Binding ShapeItemData.StrokeThickness}"
                />
            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:RectThumb}" BasedOn="{StaticResource kiso}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:RectThumb}">
          <Grid DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData}">
            <Canvas>
              <Rectangle
                x:Name="element"
                Canvas.Left="{
                  Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetLeft}"
                Canvas.Top="{
                  Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetTop}"
                Width="{Binding MyWidth}"
                Height="{Binding MyHeight}"
                Fill="{Binding ShapeItemData.MyFill}"
                Stroke="{Binding ShapeItemData.WakuColor}"
                StrokeThickness="{Binding ShapeItemData.StrokeThickness}"
                RadiusX="{Binding ShapeItemData.RoundnessRadius}"
                RadiusY="{Binding ShapeItemData.RoundnessRadius}"
                />
            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="{x:Type local:TextBlockThumb}"
         BasedOn="{StaticResource kiso}">

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TextBlockThumb}">
          <Grid>
            <Canvas>
              <TextBlock x:Name="element"
                         Padding="1"
                         Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.TextItemData.MyText}"
                         FontWeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.TextItemData.FontWeight}"
                         Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyForeground}"
                         Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyBackground}"
                         FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.TextItemData.MyFontSize}"
                         FontFamily="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.TextItemData.FontName}"
                         Canvas.Left="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetLeft}"
                         Canvas.Top="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetTop}"
                         
                         >
                <TextBlock.RenderTransform>
                  <RotateTransform x:Name="angle" Angle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyAngle}"/>
                </TextBlock.RenderTransform>
              </TextBlock>
            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



  <Style TargetType="{x:Type local:EllipseTextThumb}"
         BasedOn="{StaticResource kiso}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:EllipseTextThumb}">
          <Grid>
            <Canvas>
              <Grid x:Name="element"
                    Canvas.Left="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetLeft}"
                    Canvas.Top="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetTop}"
                    >
                <Grid.RenderTransform>
                  <RotateTransform x:Name="angle" Angle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyAngle}"/>
                </Grid.RenderTransform>
                <Ellipse Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyWidth}"
                     Height="{Binding
                        RelativeSource={RelativeSource Mode=TemplatedParent},
                        Path=MyItemData.MyHeight}"
                     Fill="{Binding
                        RelativeSource={RelativeSource Mode=TemplatedParent},
                        Path=MyItemData.ShapeItemData.MyFill}"/>
                <TextBlock Text="{Binding
                        RelativeSource={RelativeSource Mode=TemplatedParent},
                        Path=MyItemData.TextItemData.MyText}"
                       Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyForeground}"
                       FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.TextItemData.MyFontSize}"
                       Background="Transparent"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       />
              </Grid>
            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>







  <Style TargetType="{x:Type local:GeoShapeThumb2}" BasedOn="{StaticResource kiso}">
    <Style.Resources>
      <local:MyConvRotateTransform x:Key="rotate"/>
    </Style.Resources>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:GeoShapeThumb2}">
          <Grid>
            <Canvas x:Name="PART_Canvas"
                    Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyBackground}">
              <local:GeoShape
                x:Name="geoShape"
                DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData}"
                Canvas.Left="0" Canvas.Top="0"
                MyPoints="{Binding GeoShapeItemData.MyPoints, Mode=TwoWay}"
                Stroke="{Binding GeoShapeItemData.MyStroke}"
                StrokeThickness="{Binding GeoShapeItemData.MyStrokeThickness}"
                MyShapeType="{Binding GeoShapeItemData.MyShapeType}"
                MyHeadBeginType="{Binding GeoShapeItemData.MyGeoShapeHeadCapType}"
                RenderTransform="{Binding MyAngle, Converter={StaticResource rotate}}"
                >

              </local:GeoShape>
            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>











  <Style TargetType="{x:Type local:GroupThumb}"
         BasedOn="{StaticResource kiso}">
    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyInsideElementBounds.Width}"/>
    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MyInsideElementBounds.Height}"/>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:GroupThumb}">
          <Grid>
            <Canvas x:Name="canvas">
              <ItemsControl x:Name="element"
                              ItemsSource="{Binding
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Path=MyThumbs}"
                              Background="{Binding
                                RelativeSource={RelativeSource Mode=TemplatedParent},
                                Path=MyItemData.MyBackground}"
                              
                              Focusable="False"
                              Canvas.Left="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetLeft}"
                              Canvas.Top="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyInsideElementOffsetTop}"
                              >
                <ItemsControl.RenderTransform>
                  <RotateTransform x:Name="rotate" Angle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MyItemData.MyAngle}"/>
                </ItemsControl.RenderTransform>
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <local:ExCanvas x:Name="element"/>
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
              </ItemsControl>

            </Canvas>
            <Border Style="{StaticResource waku4}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:RootThumb}"
         BasedOn="{StaticResource kiso}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:RootThumb}">
          <ItemsControl x:Name="element"
                        ItemsSource="{Binding
                          RelativeSource={RelativeSource Mode=TemplatedParent},
                          Path=MyThumbs}"
                        Background="{Binding
                          RelativeSource={RelativeSource
                          Mode=TemplatedParent},
                          Path=MyItemData.MyBackground}"
                        Focusable="False">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <local:ExCanvas/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
          </ItemsControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>





</ResourceDictionary>
  