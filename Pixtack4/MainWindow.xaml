<Window x:Class="Pixtack4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pixtack4"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:MainWindow}"
        Title="MainWindow" Height="600" Width="600"
        ResizeMode="CanResizeWithGrip"
        AllowDrop="True"
        Drop="Window_Drop"
        >
  <Window.Resources>
    <local:MyConvVisibleCollapsedIsBoolFalse x:Key="visibleTrue"/>
    <local:MyConvVisibleHiddenIsBoolFalse x:Key="VisibleOrHidden"/>
    <local:MyConvOnlyGroupItemVisible x:Key="visibleGroup"/>
    <local:MyConvBoolToVisible x:Key="boolVisible"/>
  </Window.Resources>
  <Grid x:Name="MyRootGrid">
    <DockPanel>

      <!--上段-->
      <DockPanel DockPanel.Dock="Top">
        <Menu DockPanel.Dock="Top">

          <Menu.Resources>
            <Style x:Key="itemMargin" TargetType="{x:Type MenuItem}">
              <Setter Property="Margin" Value="0,2"/>
            </Style>
            <Style x:Key="itemTextBlock" TargetType="{x:Type TextBlock}">
              <Setter Property="Margin" Value="10"/>
              <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

          </Menu.Resources>

          <MenuItem Header="ファイル(_F)">
            <MenuItem Header="新規作成(リセット)" Click="Button_Click_ResetRoot"/>
            <MenuItem Header="名前を付けて保存(_S)">
              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveData">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Rootを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveFocusItem">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot.MyFocusThumb}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Focusを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>
              <MenuItem Header="Clicked" IsEnabled="False"/>
            </MenuItem>
            <MenuItem Header="画像として保存">
              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveRootToImageFile">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Rootを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveFocusItemToImageFile">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot.MyFocusThumb}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Focusを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Header="Clicked" IsEnabled="False"/>
            </MenuItem>
            <MenuItem Header="上書き保存" Click="Button_Click_OverwriteSave" InputGestureText="Ctrl+S"/>
            <MenuItem Header="開く" Click="Button_Click_OpenPx4File"/>
            <MenuItem Header="追加" Click="Button_Click_OpenFile" ToolTip="Itemとして追加する"/>
          </MenuItem>

          <MenuItem Header="編集(_E)">
            <MenuItem Header="範囲選択Item表示" Click="Button_Click_AreaItemVisibleSwitch"/>
            <MenuItem Header="画像として複製" Click="Button_Click_DupulicateAsImageForFocusItem"/>
            <MenuItem Header="複製" Click="Button_Click_DuplicateFocusItem" InputGestureText="Ctrl+D"/>
            <MenuItem Header="クリップボード">
              <MenuItem Header="RootItemをクリップボードに画像としてコピー" Click="Button_Click_CopyAsImageForRoot"/>
              <MenuItem Header="FocusItemをクリップボードに画像としてコピー" Click="Button_Click_CopyAsImageForFocusItem"/>
              <MenuItem Header="ClickedItemをクリップボードに画像としてコピー" Click="Button_Click_CopyAsImageForClickedItem"/>
              <MenuItem Header="クリップボードの画像を追加(png)" Click="Button_Click_AddImageFromClipboardPng" ToolTip="通常はこれ"/>
              <MenuItem Header="クリップボードの画像を追加(bmp)" Click="Button_Click_AddImageFromClipboardBmp" ToolTip="エクセルのグラフや図形などはこれ"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="グループ化" Click="Button_Click_Grouping" InputGestureText="Ctrl+G"/>
            <MenuItem Header="グループ解除" Click="Button_Click_UnGroup" InputGestureText="Ctrl+Shift+G"/>
            <Separator/>
            <MenuItem Header="ActiveGroupの変更">
              <MenuItem Header="IN" Click="Button_Click_ChangeActiveGroupToInside"/>
              <MenuItem Header="OUT" Click="Button_Click_ChangeActiveGroupToOutside"/>
              <MenuItem Header="Clicked" Click="Button_Click_ChangeActiveGroupClickedParent"/>
              <MenuItem Header="ToRoot" Click="Button_Click_ChangeActiveGroupRootActivate"/>
            </MenuItem>
            <MenuItem Header="グリッドサイズ変更">
              <MenuItem IsEnabled="False">
                <MenuItem.Header>
                  <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.GridSize, StringFormat=今のサイズ {0:0}}"/>
                </MenuItem.Header>
              </MenuItem>
              <Button Content="サイズUp" Click="Button_Click_ChangeGridSizeUp"/>
              <Button Content="サイズDown" Click="Button_Click_ChangeGridSizeDown"/>
              <MenuItem Header="サイズ指定" Click="Button_Click_ChangeGridSize"/>
            </MenuItem>
            <MenuItem Header="FocusItemのZ移動">
              <MenuItem Header="最前面" Click="Button_Click_ZtoTop"/>
              <MenuItem Header="前面" Click="Button_Click_ZUp" InputGestureText="PageUp"/>
              <MenuItem Header="背面" Click="Button_Click_ZDown" InputGestureText="PageDown"/>
              <MenuItem Header="最背面" Click="Button_Click_ZtoBottom"/>
            </MenuItem>
            <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_RemoveSelectedItems" InputGestureText="F4">
              <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Text="選択Item[ "/>
                  <TextBlock Text="{Binding MyRoot.MySelectedThumbs.Count}" HorizontalAlignment="Center"/>
                  <TextBlock Text=" ]個を削除"/>
                </StackPanel>
              </MenuItem.Header>
            </MenuItem>

            <Separator/>
            <MenuItem Header="全Item削除" Click="Button_Click_RemoveAllItems" InputGestureText="Ctrl+Shift+F4"/>

          </MenuItem>
          <MenuItem Header="表示(_V)">
            <CheckBox Content="Itemの枠表示" IsChecked="{Binding MyAppData.IsWakuVisible, Converter={StaticResource visibleTrue}}"/>
          </MenuItem>
          <MenuItem Header="ウィンドウ(_W)">
            <MenuItem Header="サイズと位置をリセット" Click="Button_Click_ResetWindow"/>
          </MenuItem>

          <MenuItem Header="まだ">
            <MenuItem Header="文字追加" IsEnabled="False"/>
            <MenuItem Header="図形追加" IsEnabled="False"/>
            <MenuItem Header="フリーハンド図形" IsEnabled="False"/>
            <MenuItem Header="クリップボード監視" IsEnabled="False"/>
            <MenuItem Header="Focusの上下Item表示" IsEnabled="False"/>
            <MenuItem Header="NumericUpDown" IsEnabled="False"/>

          </MenuItem>
        </Menu>

        <Expander Header="exp" IsExpanded="False">
          <TabControl>
            <TabItem Header="tab1">
              <StackPanel Orientation="Vertical">
                <WrapPanel>
                  <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                      <Setter Property="Margin" Value="2"/>
                    </Style>
                  </WrapPanel.Resources>
                  <Button Content="ウィンドウのリセット" Click="Button_Click_ResetWindow"/>
                  <Button Content="Rootをリセット" Click="Button_Click_ResetRoot"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="名前を付けて保存" Click="Button_Click_SaveData"/>
                  <Button Content="上書き保存" Click="Button_Click_OverwriteSave"/>
                  <Button Content="FocusItemを名前を付けて保存" Click="Button_Click_SaveFocusItem"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="ファイルを開く(px4)" Click="Button_Click_OpenPx4File"/>
                  <Button Content="ファイルから追加" Click="Button_Click_OpenFile"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="Rootを画像で保存" Click="Button_Click_SaveRootToImageFile"/>
                  <Button Content="Focusを画像で保存" Click="Button_Click_SaveFocusItemToImageFile"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="破線枠の表示切替" Click="Button_Click_SwitchWaku"/>
                  <Button Content="選択Itemを削除" Click="Button_Click_RemoveSelectedItems"/>
                  <Button Content="全削除" Click="Button_Click_RemoveAllItems"/>

                  <TextBlock Text="👈️👆️できた｜まだ👇️👉️"/>

                  <Button Content="確認" Click="Button_Click"/>
                </WrapPanel>
              </StackPanel>
            </TabItem>

            <TabItem Header="AppData" DataContext="{Binding MyAppData}">
              <ScrollViewer>
                <DockPanel>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding CurrentOpenFilePath, StringFormat=CurrentOpenFilePath _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding InitialDirectory, StringFormat=InitialDirectory _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding IsFileNameDescendingOrder, StringFormat=IsFileNameDescendingOrder _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding DefaultSaveDataFileName, StringFormat=DefaultSaveFileName _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding DefaultSaveImageFileName, StringFormat=DefaultSaveImageFileName _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding MyJpegQuality, StringFormat=MyJpegQuality _ {0:0}}"/>
                </DockPanel>
              </ScrollViewer>
            </TabItem>

            <TabItem Header="Group_Zindex">
              <WrapPanel Orientation="Horizontal">
                <WrapPanel.Resources>
                  <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="2"/>
                  </Style>
                </WrapPanel.Resources>
                <Button Content="グループ化" Click="Button_Click_Grouping"/>
                <Button Content="グループ解除" Click="Button_Click_UnGroup"/>
                <Grid Background="Red" Width="10"/>
                <Button Content="グループIN" Click="Button_Click_ChangeActiveGroupToInside"/>
                <Button Content="グループOUT" Click="Button_Click_ChangeActiveGroupToOutside"/>
                <Button Content="ClickItemまでIN" Click="Button_Click_ChangeActiveGroupClickedParent"/>
                <Button Content="RootまでOUT" Click="Button_Click_ChangeActiveGroupRootActivate"/>
                <Grid Background="Red" Width="10"/>
                <Button Content="ZUp" Click="Button_Click_ZUp"/>
                <Button Content="ZDown" Click="Button_Click_ZDown"/>
                <Button Content="最前面" Click="Button_Click_ZtoTop"/>
                <Button Content="最背面" Click="Button_Click_ZtoBottom"/>

                <TextBlock Text="👈️👆️できた｜まだ👇️👉️"/>
                <Button Content="グリッドサイズ変更" Click="Button_Click_ChangeGridSize"/>
                <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.GridSize, StringFormat=GridSize {0:0}}"/>
                <Button Content="クリップボードから画像貼り付け"/>
                <Button Content="クリップボードに画像としてコピー"/>
                <Button Content="複製"/>
                <Button Content="画像として複製"/>
                <TextBlock Text="{Binding MyAppData.MyJpegQuality, StringFormat=jpeg品質 {0:0}}"/>
                <Slider Minimum="50" Maximum="100" Value="{Binding MyAppData.MyJpegQuality}" Width="100"/>



                <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetLeft, StringFormat=MyAddOffsetLeft {0:0}}"/>
                <Slider Minimum="-128" Maximum="128" Value="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetLeft}" Width="100"/>

                <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetTop, StringFormat=MyAddOffsetTop {0:0}}"/>
                <Slider Minimum="-128" Maximum="128" Value="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetTop}" Width="100"/>

              </WrapPanel>
            </TabItem>
          </TabControl>
        </Expander>
      </DockPanel>

      <!--最下段のStatusBar-->
      <DockPanel DockPanel.Dock="Bottom">
        <StatusBar x:Name="MyStatusBar">
          <TextBlock x:Name="MyStatusMessage" Text="statusbar" Foreground="White" Background="DodgerBlue" Padding="4,2" Margin="-1"/>
          <TextBlock x:Name="MyStatusCurrentFileName" Text="開いているファイル名" Foreground="White" Background="DodgerBlue" Padding="4,2" Margin="-1"/>

        </StatusBar>
      </DockPanel>

      <!--中間-->
      <DockPanel DockPanel.Dock="Bottom">
        <!--左端ライン-->
        <Menu DockPanel.Dock="Left">
          <Menu.LayoutTransform>
            <RotateTransform Angle="90"/>
          </Menu.LayoutTransform>
          <Button Content="Menu"/>
          <Button Content="テスト用確認" Click="Button_Click"/>
          <Button Content="Root" Click="Button_Click_MyRootStatusPanelVisible"/>
          <!--<Button Content="ItemsTree" Click="Button_Click_ItemsTreePanelVisible"/>-->
        </Menu>

        <!--左側1、TreeVew-->
        <!--動作は問題なけどTreeViewにバインドエラーが出る-->
        <!--<Grid x:Name="MyGridMyItemsTree" DockPanel.Dock="Left" Width="200"
              DataContext="{Binding MyRoot, UpdateSourceTrigger=PropertyChanged}">
          <ScrollViewer VerticalScrollBarVisibility="Auto">
            <TreeView ItemsSource="{Binding MyThumbs}"  Background="WhiteSmoke">
              <TreeView.ItemTemplate>
                <HierarchicalDataTemplate  ItemsSource="{Binding MyThumbs}">
                  <Border BorderBrush="Silver" BorderThickness="1" Margin="1">
                    <StackPanel Orientation="Horizontal">
                      <Rectangle Width="40" Height="40">
                        <Rectangle.Fill>
                          <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                        </Rectangle.Fill>
                      </Rectangle>
                      <TextBlock Text="{Binding MyThumbType}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Border>
                </HierarchicalDataTemplate>
              </TreeView.ItemTemplate>
              -->
        <!--<TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
              </TreeView.ItemContainerStyle>-->
        <!--
            </TreeView>
          </ScrollViewer>
        </Grid>-->

        <!--左側2-->
        <Grid x:Name="MyRootStatusView" DockPanel.Dock="Left"
              Width="240"
              DataContext="{Binding MyRoot, UpdateSourceTrigger=PropertyChanged}"
              Visibility="Collapsed">
          <StackPanel>
            <GroupBox Header="Root状態確認用" DataContext="{Binding UpdateSourceTrigger=PropertyChanged}">
              <StackPanel>
                <TextBlock Text="{Binding MyThumbs.Count, StringFormat=ItemsCount _ {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb, StringFormat=FocusItem _ {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.ActualWidth, StringFormat=width {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.ActualHeight, StringFormat=height {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.MyThumbType, StringFormat=type {0}}"/>
                <Rectangle Width="100" Height="100">
                  <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{Binding MyFocusThumb, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--<BitmapCacheBrush Target="{Binding MyFocusThumb, UpdateSourceTrigger=PropertyChanged}"/>-->
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle Width="100" Height="100" UseLayoutRounding="False">
                  <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{Binding UpdateSourceTrigger=PropertyChanged}"/>
                  </Rectangle.Fill>
                </Rectangle>
              </StackPanel>
            </GroupBox>
          </StackPanel>
        </Grid>

        <Expander DockPanel.Dock="Left" ExpandDirection="Right" IsExpanded="True">
          <TabControl SelectedIndex="3" TabStripPlacement="Left" BorderBrush="SlateBlue" BorderThickness="1" Width="240">
            <TabControl.Resources>
              <Style TargetType="{x:Type TabItem}" x:Key="verticalTab">
                <Setter Property="LayoutTransform">
                  <Setter.Value>
                    <RotateTransform Angle="90"/>
                  </Setter.Value>
                </Setter>
              </Style>
            </TabControl.Resources>
            <TabItem Header="TreeView" Style="{StaticResource verticalTab}">
              <Grid x:Name="MyPanelForGroupItems" Width="160" DataContext="{Binding MyRoot.MyThumbs}">
                <TreeView x:Name="MyThumbsTreeView"
                          ItemsSource="{Binding}"
                          SelectedItemChanged="MyThumbsTreeView_SelectedItemChanged"
                          BorderThickness="0">
                  <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding MyThumbs}">
                      <Border BorderBrush="Silver" BorderThickness="0,0,0,1" Background="WhiteSmoke">
                        <StackPanel Margin="0,-10,0,-10" Orientation="Horizontal">
                          <StackPanel.RenderTransform>
                            <SkewTransform AngleX="0" AngleY="0"/>
                          </StackPanel.RenderTransform>
                          <!--<StackPanel Margin="0,0,0,0" Visibility="{Binding MyThumbType, Converter={StaticResource visibleGroup}}">-->
                          <Viewbox Stretch="Uniform" Width="60" Height="60" PreviewMouseLeftButtonDown="Viewbox_PreviewMouseLeftButtonDown">
                            <Viewbox.RenderTransform>
                              <SkewTransform AngleX="20"/>
                            </Viewbox.RenderTransform>
                            <Rectangle Width="{Binding ActualWidth}" Height="{Binding ActualHeight}">
                              <Rectangle.Fill>
                                <BitmapCacheBrush Target="{Binding}"/>
                              </Rectangle.Fill>
                            </Rectangle>
                          </Viewbox>
                          <CheckBox Content="現" Margin="10,0,10,0" VerticalAlignment="Center" IsChecked="{Binding Visibility, Converter={StaticResource VisibleOrHidden}}"/>
                        </StackPanel>
                      </Border>
                    </HierarchicalDataTemplate>
                  </TreeView.ItemTemplate>
                  <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                      <Setter Property="Margin" Value="0"/>
                      <Setter Property="Padding" Value="0"/>
                      <!--<Setter Property="IsSelected" Value="{Binding IsSelected}"/>-->
                    </Style>
                  </TreeView.ItemContainerStyle>
                </TreeView>
              </Grid>
            </TabItem>
            <TabItem Header="文字入力" Style="{StaticResource verticalTab}">
              <TabControl>
                <TabItem Header="mozi">
                  <StackPanel>
                    <Button Content="フォントリスト更新" Click="Button_Click_RenewFontList"/>

                    <TextBlock Text="フォント" VerticalAlignment="Center"/>
                    <ComboBox x:Name="MyComboBoxFont" SelectedIndex="{Binding MyAppData.FontComboBoxSelectedIndex}" ItemsSource="{Binding MyAppData.FontNameList}">
                      <!--<ComboBox x:Name="MyComboBoxFont" SelectedValuePath="Key">-->
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding}"/>
                          <!--<TextBlock Text="{Binding Key}"/>-->
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                    <DockPanel>
                      <TextBlock DockPanel.Dock="Right" Width="70" TextAlignment="Right" Text="{Binding ElementName=MySliderFontSize, Path=Value, StringFormat=サイズ {0:0.0}}"/>
                      <Slider x:Name="MySliderFontSize" DockPanel.Dock="Right" Minimum="1" Maximum="100" Value="20"/>
                    </DockPanel>
                    <DockPanel>
                      <TextBlock Text="FontWeight" VerticalAlignment="Center"/>
                      <ComboBox x:Name="MyComboBoxFontWeight" SelectedIndex="{Binding MyAppData.FontWeightComboBoxSelectedIndex}" SelectedValuePath="Value">
                        <ComboBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding Key}"/>
                          </DataTemplate>
                        </ComboBox.ItemTemplate>
                      </ComboBox>
                    </DockPanel>
                    <TextBlock Text="文字色"/>
                    <ComboBox x:Name="ComboBoxTextForeColor" SelectedValuePath="Value">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel Orientation="Horizontal">
                            <Border Width="20" Background="{Binding Value}" Margin="0,2,4,2"/>
                            <TextBlock Text="{Binding Key}"/>
                          </StackPanel>
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Text="背景色"/>
                    <ComboBox x:Name="ComboBoxTextBackColor" SelectedValuePath="Value">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel Orientation="Horizontal">
                            <Border Width="20" Background="{Binding Value}" Margin="0,2,4,2"/>
                            <TextBlock Text="{Binding Key}"/>
                          </StackPanel>
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBox x:Name="MyTextBoxAddText" AcceptsReturn="True" Height="100" Text="ここに文字列入力して&#xa;追加ボタン" GotFocus="MyTextBoxAddText_GotFocus"/>
                    <Button Content="追加" Click="Button_Click_AddTextBlockItem"/>

                  </StackPanel>
                </TabItem>
                <TabItem Header="item2">

                </TabItem>
              </TabControl>
            </TabItem>
            <TabItem Header="図形" Style="{StaticResource verticalTab}">
              <TabControl BorderThickness="0">
                <TabItem Header="基本">
                  <StackPanel Margin="4">
                    <Button Content="長方形追加" Click="Button_Click_AddRectItem"/>
                    <Button Content="楕円形追加" Click="Button_Click_AddEllipseItem"/>
                    <UniformGrid Columns="2">
                      <Slider x:Name="SliderShapeWidht" Minimum="1" Maximum="200" Value="100" TickFrequency="1" IsSnapToTickEnabled="True"/>
                      <TextBlock Text="{Binding ElementName=SliderShapeWidht, Path=Value, StringFormat=幅 {0:0}}"/>
                    </UniformGrid>
                    <UniformGrid Columns="2">
                      <Slider x:Name="SliderShapeHeight" Minimum="1" Maximum="200" Value="100" TickFrequency="1" IsSnapToTickEnabled="True"/>
                      <TextBlock Text="{Binding ElementName=SliderShapeHeight, Path=Value, StringFormat=高 {0:0}}"/>
                    </UniformGrid>
                    <TextBlock Text="塗り"/>
                    <ComboBox x:Name="ComboBoxShapeFill" SelectedValuePath="Value">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <WrapPanel>
                            <Border Height="10" Width="20" Background="{Binding Value}" Margin="0,2,2,2"/>
                          </WrapPanel>
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                      <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                          <WrapPanel Width="160"/>
                        </ItemsPanelTemplate>
                      </ComboBox.ItemsPanel>
                    </ComboBox>
                    <TextBlock Text="枠色"/>
                    <ComboBox x:Name="ComboBoxShapeStrokeColor" SelectedValuePath="Value">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel Orientation="Horizontal">
                            <Border Width="20" Background="{Binding Value}" Margin="0,2,4,2"/>
                            <TextBlock Text="{Binding Key}"/>
                          </StackPanel>
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                    <UniformGrid Columns="2">
                      <Slider x:Name="SliderShapeStrokeThickness" Minimum="0" Maximum="20" Value="0" TickFrequency="1" IsSnapToTickEnabled="True"/>
                      <TextBlock Text="{Binding ElementName=SliderShapeStrokeThickness, Path=Value, StringFormat=枠幅 {0:0}}"/>
                    </UniformGrid>
                    <UniformGrid Columns="2">
                      <Slider x:Name="SliderShapeRectRoundnessRadius" Minimum="0" Maximum="20" Value="0" TickFrequency="1" IsSnapToTickEnabled="True"/>
                      <TextBlock Text="{Binding ElementName=SliderShapeRectRoundnessRadius, Path=Value, StringFormat=角の丸さ {0:0}}"/>
                    </UniformGrid>

                  </StackPanel>
                </TabItem>
              </TabControl>
            </TabItem>
            <TabItem Header="矢印" Style="{StaticResource verticalTab}">
              <TabControl BorderThickness="0">
                <TabItem Header="基本">
                  <StackPanel Margin="4">
                    <TextBlock Text="色"/>
                    <ComboBox x:Name="ComboBoxGeoShapeStrokeColor" SelectedValuePath="Value">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel Orientation="Horizontal">
                            <Border Width="20" Background="{Binding Value}" Margin="0,2,4,2"/>
                            <TextBlock Text="{Binding Key}"/>
                          </StackPanel>
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                    <UniformGrid Columns="2" Margin="4">
                      <TextBlock Text="終端形状" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                      <ComboBox x:Name="ComboBoxGeoShapeEndCapType"/>
                    </UniformGrid>
                    <UniformGrid Columns="2" Margin="4">
                      <TextBlock Text="{Binding ElementName=SliderGeoShapeStrokeThickness, Path=Value, StringFormat=線幅 {0:0}}" HorizontalAlignment="Center"/>
                      <Slider x:Name="SliderGeoShapeStrokeThickness" Minimum="1" Maximum="50" Value="{Binding MyAppData.GeoShapeStrokeThickness}" TickFrequency="1" IsSnapToTickEnabled="True"/>
                    </UniformGrid>
                    <Button Content="直線追加" Click="Button_Click_AddGeoShapeLineItem"/>
                    <Button Content="マウスクリックで追加" Click="Button_Click_AddGeoShapeFromMouseClick"/>
                    <Button Content="マウスクリックで追加終了" Click="Button_Click_AddGeoShapeFromMouseClickEnd"/>
                    
                    <Button Content="曲線追加" Click="Button_Click_AddGeoShapeBezierItem"/>
                    <Button Content="マウスクリックで追加(曲線)" Click="Button_Click_AddGeoShapeFromMouseClick" IsEnabled="False"/>
                    <Button Content="マウスクリックで追加終了(曲線)" Click="Button_Click_AddGeoShapeFromMouseClickEnd" IsEnabled="False"/>
                    
                  </StackPanel>
                </TabItem>
                <TabItem Header="その他">

                </TabItem>
              </TabControl>
            </TabItem>
          </TabControl>
        </Expander>

        <!--<Grid x:Name="MyPanelForGroupItems" Width="200" DataContext="{Binding MyCollectionViewOnlyGroupItems}">
          <TreeView ItemsSource="{Binding}">
            <TreeView.ItemTemplate>
              <HierarchicalDataTemplate ItemsSource="{Binding}" DataType="{x:Type local:KisoThumb}">
                <StackPanel Margin="0,0,0,10">
                  <Viewbox Stretch="Uniform" Width="60" Height="60">
                    <Rectangle Width="{Binding ActualWidth}" Height="{Binding ActualHeight}">
                      <Rectangle.Fill>
                        <BitmapCacheBrush Target="{Binding}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Viewbox>
                  <CheckBox Content="表示" IsChecked="{Binding Path=Visibility, Converter={StaticResource VisibleOrHidden}}"/>
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
          </TreeView>
        </Grid>-->


        <!--右端ライン-->
        <StatusBar DockPanel.Dock="Right" TextOptions.TextFormattingMode="Display">
          <StatusBar.LayoutTransform>
            <RotateTransform Angle="90"/>
          </StatusBar.LayoutTransform>
          <StatusBarItem Content="item"/>
          <Button Content="StatusBar"/>
          <Button Content="テスト用確認" Click="Button_Click" Background="MidnightBlue" Foreground="White"/>
          <Button Content="FocusItemPanel" Click="Button_Click_FocusItemPropertyPanelVisible"/>
          <Button Content="ActiveGroupItemPanel" Click="Button_Click_ActiveGroupItemPropertyPanelVisible"/>
          <Button Content="SelectedItemsPanel" Click="Button_Click_SelectedItemsPropertyPanelVisible"/>
        </StatusBar>

        <!--右側タブ-->
        <Grid x:Name="MyPanelRightBase"
              DockPanel.Dock="Right"
              Width="220"
              DataContext="{Binding MyRoot}"
              TextOptions.TextFormattingMode="Display">
          <TabControl TabStripPlacement="Right" BorderThickness="0" SelectedIndex="5">
            <TabControl.Resources>
              <Style TargetType="TabItem">
                <Setter Property="LayoutTransform">
                  <Setter.Value>
                    <RotateTransform Angle="90"/>
                  </Setter.Value>
                </Setter>
              </Style>
            </TabControl.Resources>
            <TabItem Header="選択Item" DataContext="{Binding MySelectedThumbs}">
              <GroupBox Header="選択Item">
                <ListBox ItemsSource="{Binding}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0">
                  <ListBox.Resources>
                    <Style TargetType="ListBoxItem">
                      <Setter Property="HorizontalContentAlignment" Value="Center"/>
                      <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                  </ListBox.Resources>
                  <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </ListBox.ItemsPanel>
                  <ListBox.ItemTemplate>
                    <DataTemplate>
                      <Rectangle Width="50" Height="50">
                        <Rectangle.Fill>
                          <VisualBrush Stretch="Uniform" Visual="{Binding}"/>
                        </Rectangle.Fill>
                      </Rectangle>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                  <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                      <Setter Property="Padding" Value="0"/>
                      <Setter Property="HorizontalContentAlignment" Value="Center"/>
                      <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                  </ListBox.ItemContainerStyle>
                </ListBox>

              </GroupBox>
            </TabItem>
            <TabItem Header="Group" DataContext="{Binding MyActiveGroupThumb}">
              <GroupBox Header="ActiveGroupItem">
                <StackPanel>
                  <Canvas Width="100" Height="100">
                    <Canvas.Background>
                      <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                    </Canvas.Background>
                  </Canvas>
                  <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
                  <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
                  <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
                  <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.GridSize, StringFormat=GridSize  {0:0}}"/>
                  <UniformGrid Columns="2">
                    <TextBlock Text="GridSize" HorizontalAlignment="Right"/>
                    <TextBlock Text="{Binding MyItemData.GridSize}" HorizontalAlignment="Center"/>
                  </UniformGrid>
                </StackPanel>
              </GroupBox>
            </TabItem>
            <TabItem Header="Focus" DataContext="{Binding MyFocusThumb}">
              <GroupBox Header="FocusItem">
                <StackPanel>
                  <Canvas Width="100" Height="100">
                    <Canvas.Background>
                      <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                    </Canvas.Background>
                  </Canvas>
                  <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
                  <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
                  <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
                  <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyGuid, StringFormat=Guid  {0:0}}"/>
                  <TextBlock Text="{Binding IsFocus, StringFormat=IsFocus  {0:0}}"/>
                  <TextBlock Text="{Binding IsEditing, StringFormat=IsEditing  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.TextItemData.FontName, StringFormat=FontName  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.TextItemData.MyFontSize, StringFormat=MyFontSize  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.TextItemData.MyText, StringFormat=MyText  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.TextItemData.FontWeight, StringFormat=FontWeight  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.GeoShapeItemData.MyPoints, StringFormat=Points  {0:0 }}" TextWrapping="Wrap"/>
                  <TextBlock Text="{Binding IsSelectable, StringFormat=IsSelectable  {0:0}}"/>
                  <TextBlock Text="{Binding IsSelected, StringFormat=IsSelected  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyThumbsItemData.Count, StringFormat=MyThumbsItemData.Count  {0:0}}"/>
                </StackPanel>
              </GroupBox>
            </TabItem>

            <TabItem Header="Clicked" DataContext="{Binding MyClickedThumb}">
              <GroupBox Header="ClickedItem">
                <StackPanel>
                  <Canvas Width="100" Height="100">
                    <Canvas.Background>
                      <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                    </Canvas.Background>
                  </Canvas>
                  <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
                  <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
                  <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
                  <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyGuid, StringFormat=Guid  {0:0}}"/>
                  <TextBlock Text="{Binding IsSelectable, StringFormat=IsSelectable  {0:0}}"/>
                  <TextBlock Text="{Binding IsSelected, StringFormat=IsSelected  {0:0}}"/>
                  <TextBlock Text="{Binding MyItemData.MyThumbsItemData.Count, StringFormat=MyThumbsItemData.Count  {0:0}}"/>
                </StackPanel>
              </GroupBox>
            </TabItem>

            <TabItem Header="TestTree" DataContext="{Binding}">
              <ScrollViewer VerticalScrollBarVisibility="Auto">
                <TreeView ItemsSource="{Binding MyThumbs}"  Background="WhiteSmoke">
                  <!--<TreeView.Resources>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
              </TreeView.Resources>-->
                  <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                      <!--<Setter Property="Margin" Value="0,20,0,-30"/>-->
                      <!--<Setter Property="Padding" Value="20"/>-->
                    </Style>
                  </TreeView.ItemContainerStyle>
                  <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate  ItemsSource="{Binding MyThumbs}">
                      <Border BorderBrush="Silver" BorderThickness="0" Margin="0">
                        <StackPanel Orientation="Horizontal">
                          <StackPanel.RenderTransform>
                            <SkewTransform AngleX="20" AngleY="0"/>
                          </StackPanel.RenderTransform>
                          <Rectangle Width="60" Height="60" Margin="0,0,0,-20">
                            <Rectangle.RenderTransform>
                              <SkewTransform AngleX="0" AngleY="0"/>
                            </Rectangle.RenderTransform>
                            <Rectangle.Fill>
                              <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                            </Rectangle.Fill>
                          </Rectangle>
                          <TextBlock Text="{Binding MyThumbType}" VerticalAlignment="Bottom"/>
                        </StackPanel>
                      </Border>
                    </HierarchicalDataTemplate>
                  </TreeView.ItemTemplate>
                  <!--<TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
              </TreeView.ItemContainerStyle>-->
                </TreeView>
              </ScrollViewer>
            </TabItem>
            <TabItem Header="AppData">
              <GroupBox Header="アプリの設定">
                <StackPanel DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}, Path=MyAppData}">
                  <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                      <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                  </StackPanel.Resources>
                  <TextBlock Text="{Binding CurrentOpenFilePath, StringFormat=CurrentOpenFilePath {0:0}}"/>
                  <TextBlock Text="{Binding DefaultSaveDataFileName, StringFormat=DefaultSaveDataFileName {0:0}}"/>
                  <TextBlock Text="{Binding DefaultSaveImageFileName, StringFormat=DefaultSaveImageFileName {0:0}}"/>
                  <TextBlock Text="{Binding FontComboBoxSelectedIndex, StringFormat=FontComboBoxSelectedIndex {0:0}}"/>
                  <TextBlock Text="{Binding FontWeightComboBoxSelectedIndex, StringFormat=FontWeightComboBoxSelectedIndex {0:0}}"/>
                  <TextBlock Text="{Binding GeoShapeHandleSize, StringFormat=GeoShapeHandleSize {0:0}}"/>
                  <Slider Minimum="10" Maximum="100" Value="{Binding GeoShapeHandleSize}" TickFrequency="1.0" IsSnapToTickEnabled="True"/>
                  <TextBlock Text="{Binding InitialDirectory, StringFormat=InitialDirectory {0:0}}"/>
                  <TextBlock Text="{Binding IsFileNameDescendingOrder, StringFormat=IsFileNameDescendingOrder {0:0}}"/>
                  <TextBlock Text="{Binding IsWakuVisible, StringFormat=IsWakuVisible {0}}"/>
                  <TextBlock Text="{Binding MaxGridSize, StringFormat=MaxGridSize {0:0}}"/>
                  <TextBlock Text="{Binding MinGridSize, StringFormat=MinGridSize {0:0}}"/>
                  <TextBlock Text="{Binding MyJpegQuality, StringFormat=MyJpegQuality {0:0}}"/>
                </StackPanel>
              </GroupBox>
            </TabItem>
          </TabControl>
        </Grid>
        <!--右側1-->
        <Grid x:Name="MyPanelSelectedItemsProperty" DockPanel.Dock="Right" Width="200"
              DataContext="{Binding MyRoot.MySelectedThumbs}" Visibility="Collapsed">
          <GroupBox Header="SelectedItems">
            <ListBox ItemsSource="{Binding}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
              <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
              </ListBox.Resources>
              <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ListBox.ItemsPanel>
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <Rectangle Width="50" Height="50">
                    <Rectangle.Fill>
                      <VisualBrush Stretch="Uniform" Visual="{Binding}"/>
                    </Rectangle.Fill>
                  </Rectangle>
                </DataTemplate>
              </ListBox.ItemTemplate>
              <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                  <Setter Property="Padding" Value="0"/>
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
              </ListBox.ItemContainerStyle>
            </ListBox>

            <!--<ScrollViewer>
              <TreeView ItemsSource="{Binding}">
                <TreeView.ItemTemplate>
                  <HierarchicalDataTemplate DataType="local:RootThumb" ItemsSource="{Binding}">
                    <StackPanel Orientation="Vertical">
                      <TextBlock Text="{Binding MyThumbType}" VerticalAlignment="Center" Margin="10"/>
                      <Rectangle Width="50" Height="50">
                        <Rectangle.Fill>
                          <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                        </Rectangle.Fill>
                      </Rectangle>
                    </StackPanel>
                  </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
              </TreeView>
            </ScrollViewer>-->
            <!--<ListBox ItemsSource="{Binding}" d:ItemsSource="{d:SampleData ItemCount=5}">
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <WrapPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </WrapPanel>
                </DataTemplate>
              </ListBox.ItemTemplate>
              <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" VerticalAlignment="Top"/>
                </ItemsPanelTemplate>
              </ListBox.ItemsPanel>
            </ListBox>-->
          </GroupBox>
        </Grid>

        <!--右側2-->
        <Grid
          x:Name="MyPanelActiveGroupItemProperty"
          DockPanel.Dock="Right"
          Width="200"
          DataContext="{Binding MyRoot.MyActiveGroupThumb}" Visibility="Collapsed">
          <GroupBox Header="ActiveGroupItem">
            <StackPanel>
              <Canvas Width="100" Height="100">
                <Canvas.Background>
                  <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                </Canvas.Background>
              </Canvas>
              <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
              <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
              <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
              <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
              <TextBlock Text="{Binding MyItemData.GridSize, StringFormat=GridSize  {0:0}}"/>
              <UniformGrid Columns="2">
                <TextBlock Text="GridSize" HorizontalAlignment="Right"/>
                <TextBlock Text="{Binding MyItemData.GridSize}" HorizontalAlignment="Center"/>
              </UniformGrid>
            </StackPanel>
          </GroupBox>
        </Grid>

        <!--右側3-->
        <Grid x:Name="MyPanelFocusItemProperty" DockPanel.Dock="Right" Width="200" DataContext="{Binding MyRoot.MyFocusThumb}" Visibility="Collapsed">
          <GroupBox Header="FocusItem">
            <StackPanel>
              <Canvas Width="100" Height="100">
                <Canvas.Background>
                  <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                </Canvas.Background>
              </Canvas>
              <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
              <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
              <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
              <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
              <TextBlock Text="{Binding MyItemData.MyGuid, StringFormat=Guid  {0:0}}"/>
              <TextBlock Text="{Binding MyItemData.MyThumbsItemData.Count, StringFormat=MyThumbsItemData.Count  {0:0}}"/>

            </StackPanel>
          </GroupBox>
        </Grid>

        <!--右側4、メインパネル-->
        <Grid x:Name="MyMainGridPanel" DockPanel.Dock="Right" Background="Transparent">
          <ScrollViewer
          x:Name="MyScrollViewer"
          UseLayoutRounding="True"
          DockPanel.Dock="Right"
          HorizontalScrollBarVisibility="Visible"
          VerticalScrollBarVisibility="Visible"
          HorizontalAlignment="Left"
          VerticalAlignment="Top">
            <!--<Canvas Width="2000" Height="1000" Background="AliceBlue">
            <TextBlock>
               ScrollViewerの中の、ここがメインのパネルになる<LineBreak/>
            </TextBlock>
          </Canvas>-->
          </ScrollViewer>
          
          <!--マウスクリックで頂点追加用グリッド-->
          <Grid x:Name="MyMainGridCover"  Visibility="Collapsed" Cursor="Cross">
            <Grid.Background>
              <SolidColorBrush>
                <SolidColorBrush.Color>
                  <Color A="120" R="5" G="5" B="5"/>
                </SolidColorBrush.Color>
              </SolidColorBrush>
            </Grid.Background>
            <Polyline x:Name="MyTempPolyline" Stroke="{Binding ElementName=ComboBoxGeoShapeStrokeColor, Path=SelectedValue}" StrokeThickness="{Binding MyAppData.GeoShapeStrokeThickness}" Points="0,0,100,100"/>
          </Grid>
          
          <Grid x:Name="MyMainGridCoverBezier"  Visibility="Collapsed" Cursor="Cross">
            <Grid.Background>
              <SolidColorBrush>
                <SolidColorBrush.Color>
                  <Color A="120" R="5" G="5" B="5"/>
                </SolidColorBrush.Color>
              </SolidColorBrush>
            </Grid.Background>
            <Polyline x:Name="MyTempBezierline" Stroke="{Binding ElementName=ComboBoxGeoShapeStrokeColor, Path=SelectedValue}" StrokeThickness="{Binding MyAppData.GeoShapeStrokeThickness}" Points="0,0,100,100"/>
          </Grid>
          
        </Grid>
      </DockPanel>
      <!--中間ここまで-->

    </DockPanel>

  </Grid>
</Window>