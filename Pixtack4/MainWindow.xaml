<Window x:Class="Pixtack4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pixtack4"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:MainWindow}"
        Title="MainWindow" Height="300" Width="600"
        ResizeMode="CanResizeWithGrip"
        AllowDrop="True"
        Drop="Window_Drop">
  <Window.Resources>
    <local:MyConvVisibleCollapsedIsBoolFalse x:Key="visibleTrue"/>
  </Window.Resources>
  <Grid x:Name="MyRootGrid">
    <DockPanel>

      <!--上段-->
      <DockPanel DockPanel.Dock="Top">
        <Menu DockPanel.Dock="Top">

          <Menu.Resources>
            <Style x:Key="itemMargin" TargetType="{x:Type MenuItem}">
              <Setter Property="Margin" Value="0,2"/>
            </Style>
            <Style x:Key="itemTextBlock" TargetType="{x:Type TextBlock}">
              <Setter Property="Margin" Value="10"/>
              <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

          </Menu.Resources>

          <MenuItem Header="ファイル(_F)">
            <MenuItem Header="新規作成(リセット)" Click="Button_Click_ResetRoot"/>
            <MenuItem Header="名前を付けて保存(_S)">
              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveData">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Rootを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveFocusItem">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot.MyFocusThumb}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Focusを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>
              <MenuItem Header="Clicked" IsEnabled="False"/>
            </MenuItem>
            <MenuItem Header="画像として保存">
              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveRootToImageFile">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Rootを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_SaveFocusItemToImageFile">
                <MenuItem.Header>
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Visual="{Binding MyRoot.MyFocusThumb}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Focusを保存" Style="{StaticResource itemTextBlock}"/>
                  </StackPanel>
                </MenuItem.Header>
              </MenuItem>

              <MenuItem Header="Clicked" IsEnabled="False"/>
            </MenuItem>
            <MenuItem Header="上書き保存" Click="Button_Click_OverwriteSave"/>
            <MenuItem Header="開く" Click="Button_Click_OpenPx4File"/>
            <MenuItem Header="追加" Click="Button_Click_OpenFile" ToolTip="Itemとして追加する"/>
          </MenuItem>
          
          <MenuItem Header="編集(_E)">
            <MenuItem Header="グリッドサイズ縮小" Click="Button_Click_ChangeGridSizeDown"/>
            <Separator/>
            <TextBlock Text="完了👇️｜👆️まだ"/>
            <Separator/>
            <MenuItem Header="グループ化" Click="Button_Click_Grouping"/>
            <MenuItem Header="グループ解除" Click="Button_Click_UnGroup"/>
            <Separator/>
            <MenuItem Header="ActiveGroupの変更">
              <MenuItem Header="IN" Click="Button_Click_ChangeActiveGroupToInside"/>
              <MenuItem Header="OUT" Click="Button_Click_ChangeActiveGroupToOutside"/>
              <MenuItem Header="Clicked" Click="Button_Click_ChangeActiveGroupClickedParent"/>
              <MenuItem Header="ToRoot" Click="Button_Click_ChangeActiveGroupRootActivate"/>
            </MenuItem>
            <MenuItem Header="Z移動">
              <MenuItem Header="最前面" Click="Button_Click_ZtoTop"/>
              <MenuItem Header="1Up" Click="Button_Click_ZUp"/>
              <MenuItem Header="1Down" Click="Button_Click_ZDown"/>
              <MenuItem Header="最背面" Click="Button_Click_ZtoBottom"/>
            </MenuItem>
            <MenuItem Header="グリッドサイズ変更" Click="Button_Click_ChangeGridSize"/>
            <MenuItem Style="{StaticResource itemMargin}" Click="Button_Click_RemoveSelectedItems">
              <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Text="選択Item"/>
                  <TextBlock Text="{Binding MyRoot.MySelectedThumbs.Count}" HorizontalAlignment="Center"/>
                  <TextBlock Text="個を削除"/>
                </StackPanel>
              </MenuItem.Header>
            </MenuItem>

            <Separator/>
            <MenuItem Header="全Item削除" Click="Button_Click_RemoveAllItems"/>

          </MenuItem>
          <MenuItem Header="表示(_V)">
            <CheckBox Content="Itemの枠表示" IsChecked="{Binding MyAppData.IsWakuVisible, Converter={StaticResource visibleTrue}}"/>
          </MenuItem>
          <MenuItem Header="ウィンドウ(_W)">
            <MenuItem Header="サイズと位置をリセット" Click="Button_Click_ResetWindow"/>
          </MenuItem>

        </Menu>

        <Grid Height="100">
          <TabControl>
            <TabItem Header="tab1">
              <StackPanel Orientation="Vertical">
                <WrapPanel>
                  <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                      <Setter Property="Margin" Value="2"/>
                    </Style>
                  </WrapPanel.Resources>
                  <Button Content="ウィンドウのリセット" Click="Button_Click_ResetWindow"/>
                  <Button Content="Rootをリセット" Click="Button_Click_ResetRoot"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="名前を付けて保存" Click="Button_Click_SaveData"/>
                  <Button Content="上書き保存" Click="Button_Click_OverwriteSave"/>
                  <Button Content="FocusItemを名前を付けて保存" Click="Button_Click_SaveFocusItem"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="ファイルを開く(px4)" Click="Button_Click_OpenPx4File"/>
                  <Button Content="ファイルから追加" Click="Button_Click_OpenFile"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="Rootを画像で保存" Click="Button_Click_SaveRootToImageFile"/>
                  <Button Content="Focusを画像で保存" Click="Button_Click_SaveFocusItemToImageFile"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="破線枠の表示切替" Click="Button_Click_SwitchWaku"/>
                  <Button Content="選択Itemを削除" Click="Button_Click_RemoveSelectedItems"/>
                  <Button Content="全削除" Click="Button_Click_RemoveAllItems"/>

                  <TextBlock Text="👈️👆️できた｜まだ👇️👉️"/>

                  <Button Content="確認" Click="Button_Click"/>
                </WrapPanel>
              </StackPanel>
            </TabItem>

            <TabItem Header="AppData" DataContext="{Binding MyAppData}">
              <ScrollViewer>
                <DockPanel>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding CurrentOpenFilePath, StringFormat=CurrentOpenFilePath _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding InitialDirectory, StringFormat=InitialDirectory _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding IsFileNameDescendingOrder, StringFormat=IsFileNameDescendingOrder _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding DefaultSaveDataFileName, StringFormat=DefaultSaveFileName _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding DefaultSaveImageFileName, StringFormat=DefaultSaveImageFileName _ {0:0}}"/>
                  <TextBlock DockPanel.Dock="Top" Text="{Binding MyJpegQuality, StringFormat=MyJpegQuality _ {0:0}}"/>
                </DockPanel>
              </ScrollViewer>
            </TabItem>

            <TabItem Header="Group_Zindex">
              <WrapPanel Orientation="Horizontal">
                <WrapPanel.Resources>
                  <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="2"/>
                  </Style>
                </WrapPanel.Resources>
                <Button Content="グループ化" Click="Button_Click_Grouping"/>
                <Button Content="グループ解除" Click="Button_Click_UnGroup"/>
                <Grid Background="Red" Width="10"/>
                <Button Content="グループIN" Click="Button_Click_ChangeActiveGroupToInside"/>
                <Button Content="グループOUT" Click="Button_Click_ChangeActiveGroupToOutside"/>
                <Button Content="ClickItemまでIN" Click="Button_Click_ChangeActiveGroupClickedParent"/>
                <Button Content="RootまでOUT" Click="Button_Click_ChangeActiveGroupRootActivate"/>
                <Grid Background="Red" Width="10"/>
                <Button Content="ZUp" Click="Button_Click_ZUp"/>
                <Button Content="ZDown" Click="Button_Click_ZDown"/>
                <Button Content="最前面" Click="Button_Click_ZtoTop"/>
                <Button Content="最背面" Click="Button_Click_ZtoBottom"/>

                <TextBlock Text="👈️👆️できた｜まだ👇️👉️"/>
                <Button Content="グリッドサイズ変更" Click="Button_Click_ChangeGridSize"/>
                <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.GridSize, StringFormat=GridSize {0:0}}"/>
                <Button Content="クリップボードから画像貼り付け"/>
                <Button Content="クリップボードに画像としてコピー"/>
                <Button Content="複製"/>
                <Button Content="画像として複製"/>
                <TextBlock Text="{Binding MyAppData.MyJpegQuality, StringFormat=jpeg品質 {0:0}}"/>
                <Slider Minimum="50" Maximum="100" Value="{Binding MyAppData.MyJpegQuality}" Width="100"/>



                <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetLeft, StringFormat=MyAddOffsetLeft {0:0}}"/>
                <Slider Minimum="-128" Maximum="128" Value="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetLeft}" Width="100"/>

                <TextBlock Text="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetTop, StringFormat=MyAddOffsetTop {0:0}}"/>
                <Slider Minimum="-128" Maximum="128" Value="{Binding MyRoot.MyActiveGroupThumb.MyItemData.MyAddOffsetTop}" Width="100"/>

              </WrapPanel>
            </TabItem>
          </TabControl>
        </Grid>
      </DockPanel>

      <!--最下段のStatusBar-->
      <DockPanel DockPanel.Dock="Bottom">
        <StatusBar x:Name="MyStatusBar">
          <TextBlock x:Name="MyStatusMessage" Text="statusbar" Foreground="White" Background="DodgerBlue" Padding="4,2" Margin="-1"/>
          <TextBlock x:Name="MyStatusCurrentFileName" Text="開いているファイル名" Foreground="White" Background="DodgerBlue" Padding="4,2" Margin="-1"/>

        </StatusBar>
      </DockPanel>

      <!--中間-->
      <DockPanel DockPanel.Dock="Bottom">
        <!--左端ライン-->
        <Menu DockPanel.Dock="Left">
          <Menu.LayoutTransform>
            <RotateTransform Angle="90"/>
          </Menu.LayoutTransform>
          <Button Content="Menu"/>
          <Button Content="テスト用確認" Click="Button_Click"/>
          <Button Content="Root" Click="Button_Click_MyRootStatusPanelVisible"/>
          <Button Content="ItemsTree" Click="Button_Click_ItemsTreePanelVisible"/>
        </Menu>

        <!--左側1、TreeVew-->
        <!--動作は問題なけどTreeViewにバインドエラーが出る-->
        <Grid x:Name="MyGridMyItemsTree" DockPanel.Dock="Left" Width="200"
              DataContext="{Binding MyRoot, UpdateSourceTrigger=PropertyChanged}">
          <ScrollViewer VerticalScrollBarVisibility="Auto">
            <TreeView ItemsSource="{Binding MyThumbs}"  Background="WhiteSmoke">
              <!--<TreeView.Resources>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
              </TreeView.Resources>-->
              <TreeView.ItemTemplate>
                <HierarchicalDataTemplate  ItemsSource="{Binding MyThumbs}">
                  <Border BorderBrush="Silver" BorderThickness="1" Margin="1">
                    <StackPanel Orientation="Horizontal">
                      <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                          <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                        </Rectangle.Fill>
                      </Rectangle>
                      <TextBlock Text="{Binding MyThumbType}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Border>
                </HierarchicalDataTemplate>
              </TreeView.ItemTemplate>
              <!--<TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
              </TreeView.ItemContainerStyle>-->
            </TreeView>
          </ScrollViewer>
        </Grid>

        <!--左側2-->
        <Grid x:Name="MyRootStatusView" DockPanel.Dock="Left"
              Width="200"
              DataContext="{Binding MyRoot, UpdateSourceTrigger=PropertyChanged}"
              Visibility="Collapsed">
          <StackPanel>
            <GroupBox Header="Root状態確認用" DataContext="{Binding UpdateSourceTrigger=PropertyChanged}">
              <StackPanel>
                <TextBlock Text="{Binding MyThumbs.Count, StringFormat=ItemsCount _ {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb, StringFormat=FocusItem _ {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.ActualWidth, StringFormat=width {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.ActualHeight, StringFormat=height {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.MyThumbType, StringFormat=type {0}}"/>
                <Rectangle Width="100" Height="100">
                  <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{Binding MyFocusThumb, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--<BitmapCacheBrush Target="{Binding MyFocusThumb, UpdateSourceTrigger=PropertyChanged}"/>-->
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle Width="100" Height="100" UseLayoutRounding="False">
                  <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{Binding UpdateSourceTrigger=PropertyChanged}"/>
                  </Rectangle.Fill>
                </Rectangle>
              </StackPanel>
            </GroupBox>
          </StackPanel>
        </Grid>

        <!--右端ライン-->
        <StatusBar DockPanel.Dock="Right" TextOptions.TextFormattingMode="Display">
          <StatusBar.LayoutTransform>
            <RotateTransform Angle="90"/>
          </StatusBar.LayoutTransform>
          <StatusBarItem Content="item"/>
          <Button Content="StatusBar"/>
          <Button Content="テスト用確認" Click="Button_Click" Background="MidnightBlue" Foreground="White"/>
          <Button Content="FocusItemPanel" Click="Button_Click_FocusItemPropertyPanelVisible"/>
          <Button Content="ActiveGroupItemPanel" Click="Button_Click_ActiveGroupItemPropertyPanelVisible"/>
          <Button Content="SelectedItemsPanel" Click="Button_Click_SelectedItemsPropertyPanelVisible"/>
        </StatusBar>

        <!--右側1-->
        <Grid x:Name="MyPanelSelectedItemsProperty" DockPanel.Dock="Right" Width="200"
              DataContext="{Binding MyRoot.MySelectedThumbs}" Visibility="Visible">
          <GroupBox Header="SelectedItems">
            <ListBox ItemsSource="{Binding}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
              <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
              </ListBox.Resources>
              <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ListBox.ItemsPanel>
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <Rectangle Width="50" Height="50">
                    <Rectangle.Fill>
                      <VisualBrush Stretch="Uniform" Visual="{Binding}"/>
                    </Rectangle.Fill>
                  </Rectangle>
                </DataTemplate>
              </ListBox.ItemTemplate>
              <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                  <Setter Property="Padding" Value="0"/>
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
              </ListBox.ItemContainerStyle>
            </ListBox>

            <!--<ScrollViewer>
              <TreeView ItemsSource="{Binding}">
                <TreeView.ItemTemplate>
                  <HierarchicalDataTemplate DataType="local:RootThumb" ItemsSource="{Binding}">
                    <StackPanel Orientation="Vertical">
                      <TextBlock Text="{Binding MyThumbType}" VerticalAlignment="Center" Margin="10"/>
                      <Rectangle Width="50" Height="50">
                        <Rectangle.Fill>
                          <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                        </Rectangle.Fill>
                      </Rectangle>
                    </StackPanel>
                  </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
              </TreeView>
            </ScrollViewer>-->
            <!--<ListBox ItemsSource="{Binding}" d:ItemsSource="{d:SampleData ItemCount=5}">
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <WrapPanel Orientation="Horizontal">
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </WrapPanel>
                </DataTemplate>
              </ListBox.ItemTemplate>
              <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" VerticalAlignment="Top"/>
                </ItemsPanelTemplate>
              </ListBox.ItemsPanel>
            </ListBox>-->
          </GroupBox>
        </Grid>

        <!--右側2-->
        <Grid x:Name="MyPanelActiveGroupItemProperty" DockPanel.Dock="Right" Width="200" DataContext="{Binding MyRoot.MyActiveGroupThumb}" Visibility="Collapsed">
          <GroupBox Header="ActiveGroupItem">
            <StackPanel>
              <Canvas Width="100" Height="100">
                <Canvas.Background>
                  <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                </Canvas.Background>
              </Canvas>
              <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
              <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
              <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
              <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
            </StackPanel>
          </GroupBox>
        </Grid>


        <!--右側3-->
        <Grid x:Name="MyPanelFocusItemProperty" DockPanel.Dock="Right" Width="200" DataContext="{Binding MyRoot.MyFocusThumb}" Visibility="Collapsed">
          <GroupBox Header="FocusItem">
            <StackPanel>
              <Canvas Width="100" Height="100">
                <Canvas.Background>
                  <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                </Canvas.Background>
              </Canvas>
              <TextBlock Text="{Binding MyThumbType, StringFormat=MyThumbType  {0}}"/>
              <TextBlock Text="{Binding ActualWidth, StringFormat=ActualWidth  {0:0}}"/>
              <TextBlock Text="{Binding ActualHeight, StringFormat=ActualHeight  {0:0}}"/>
              <TextBlock Text="{Binding MyActualTop, StringFormat=ActualTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyActualLeft, StringFormat=ActualLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyLeft, StringFormat=MyLeft  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyTop, StringFormat=MyTop  {0:0.0}}"/>
              <TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=MyZIndex  {0:0}}"/>
            </StackPanel>
          </GroupBox>
        </Grid>

        <!--右側4、メインパネル-->
        <ScrollViewer x:Name="MyScrollViewer" UseLayoutRounding="True" DockPanel.Dock="Right" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" VerticalAlignment="Top">
          <!--<Canvas Width="2000" Height="1000" Background="AliceBlue">
            <TextBlock>
               ScrollViewerの中の、ここがメインのパネルになる<LineBreak/>
            </TextBlock>
          </Canvas>-->
        </ScrollViewer>
      </DockPanel>
      <!--中間ここまで-->

    </DockPanel>

  </Grid>
</Window>